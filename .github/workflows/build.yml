name: Build and Release

on:
  push:
    branches: [ master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: self-hosted
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Debug PATH
      run: echo $env:PATH
      shell: powershell

    - name: Install dependencies
      shell: powershell
      run: |
        & "${{ env.pythonLocation }}\python.exe" -m pip cache purge
        & "${{ env.pythonLocation }}\python.exe" -m pip install --upgrade pip --force-reinstall
        & "${{ env.pythonLocation }}\python.exe" -m pip install -r requirements.txt --force-reinstall
        & "${{ env.pythonLocation }}\python.exe" -m pip install pyinstaller --force-reinstall

    - name: List files in the repository
      run: |
        ls -R
      shell: powershell

    - name: Build with PyInstaller
      shell: powershell
      run: pyinstaller --onefile --noconsole --name SOCDunk --icon="uttanka.ico" --add-data "uttanka.png;." --manifest manifest.xml --hidden-import pystray --hidden-import PIL main.py

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/SOCDunk.exe
        asset_name: SOCDunk.exe
        asset_content_type: application/vnd.microsoft.portable-executable
<<<<<<< Updated upstream
=======

  deploy-pages:
    runs-on: self-hosted
    needs: build
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages

    - name: Update index.html with release info
      run: |
        $releaseTag = "${{ github.run_number }}"
        $repoName = "${{ github.event.repository.name }}"
        $ownerName = "${{ github.repository_owner }}"
        $downloadLink = "https://github.com/$ownerName/$repoName/releases/download/$releaseTag/SOCDunk.exe"
        
        $content = Get-Content index.html -Raw
        $content = $content -replace '{{ LATEST_RELEASE_TAG }}', $releaseTag
        $content = $content -replace 'href="#" id="downloadLink" class="download-button"' , "href=$downloadLink id="downloadLink" class="download-button""
        $content = $content -replace 'Version: <span id="appVersion">Loading...</span>', "Version: <span id="appVersion">$releaseTag</span>"
        $content = $content -replace 'Last Updated: <span id="lastUpdated">Loading...</span>', "Last Updated: <span id="lastUpdated">$(Get-Date -Format "yyyy-MM-dd")</span>"
        $content | Set-Content index.html
>>>>>>> Stashed changes
